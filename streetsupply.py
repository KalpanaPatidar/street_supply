# -*- coding: utf-8 -*-
"""StreetSupply.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-zqkuHAoZUdZbFyhintqp4fRol9n0aEG
"""

import pandas as pd

# Sample product + supplier database
products = pd.DataFrame({
    'product_id': [1, 2, 3, 4, 5, 6],
    'name': ['Mustard Oil', 'Rice', 'Wheat Flour', 'Tomato Sauce', 'Milk', 'Coriander Powder'],
    'category': ['Edible Oil', 'Grains', 'Grains', 'Sauces', 'Dairy', 'Spices'],
    'price': [120, 45, 38, 60, 50, 30],
    'supplier': ['A', 'B', 'C', 'D', 'E', 'F'],
    'rating': [4.5, 4.1, 4.7, 4.3, 4.2, 4.6],
    'discount': [10, 0, 5, 15, 5, 0],
    'stock': [10, 20, 15, 8, 25, 12]
})

products['final_price'] = products['price'] * (1 - products['discount'] / 100)
products

cart = []

# Add to cart
def add_to_cart(product_id, qty):
    product = products[products['product_id'] == product_id]
    if product.empty:
        print("‚ùå Product not found!")
        return
    cart.append({'id': product_id, 'name': product['name'].values[0], 'qty': qty, 'price': product['final_price'].values[0]})

# Remove from cart
def remove_from_cart(product_id):
    global cart
    cart = [item for item in cart if item['id'] != product_id]

# Show cart
def show_cart():
    if not cart:
        print("üõí Cart is empty.")
        return
    print("üõç Your Cart:")
    total = 0
    for item in cart:
        total += item['qty'] * item['price']
        print(f"{item['qty']} x {item['name']} ‚Üí ‚Çπ{item['price']}/unit")
    print(f"üí∞ Total = ‚Çπ{total:.2f}")

# Checkout
def place_order():
    print("‚úÖ Order placed successfully!")
    show_cart()
    cart.clear()

wishlist = []

def add_to_wishlist(product_id):
    if product_id not in wishlist:
        wishlist.append(product_id)

def remove_from_wishlist(product_id):
    if product_id in wishlist:
        wishlist.remove(product_id)

def show_wishlist():
    print("üíñ Wishlist:")
    for pid in wishlist:
        item = products[products['product_id'] == pid]
        print(f"- {item['name'].values[0]}")

def search_product(keyword):
    matches = products[products['name'].str.lower().str.contains(keyword.lower())]
    return matches.sort_values(by='final_price')

users = {
    'vendor1': {'role': 'vendor', 'email': 'vendor1@gmail.com'},
    'supplier1': {'role': 'supplier', 'email': 'supplier1@gmail.com'}
}

def login(user_id):
    if user_id in users:
        print(f"üëã Welcome {user_id} ({users[user_id]['role']})")
    else:
        print("‚ùå User not found.")

# For now, we‚Äôll just simulate review summary
reviews = {
    'Rice': ['Very good quality', 'Reasonable price', 'Good for daily cooking'],
    'Milk': ['Fresh and hygienic', 'Quick delivery', 'Affordable']
}

def summarize_reviews(product_name):
    print(f"üìù Review summary for {product_name}:")
    if product_name in reviews:
        summary = " | ".join(reviews[product_name])
        print(f"üëâ {summary}")
    else:
        print("No reviews found.")